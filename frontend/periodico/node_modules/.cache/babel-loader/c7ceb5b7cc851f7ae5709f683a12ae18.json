{"ast":null,"code":"var _jsxFileName = \"/Users/josemejiao/Documents/topicos_telematica/project01/frontend/periodico/src/CommentForm.js\";\nimport React, { Component } from 'react';\nimport Login from './Login.js';\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: 'Jose A. Mejia',\n      userComment: '',\n      isLoggedIn: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changeLoginState = this.changeLoginState.bind(this);\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const inputName = target.name;\n    const inputValue = target.value;\n    this.setState({\n      [inputName]: inputValue\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var params = {\n      User: this.state.userName,\n      body: this.state.userComment,\n      article: this.props.articleID\n    };\n    fetch('http://localhost:3000/comments/' + this.props.articleID + '', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        userName: '',\n        userComment: ''\n      });\n      document.getElementById(\"commentForm\").reset();\n      this.props.action(params);\n    }).catch(console.log);\n  }\n\n  changeLoginState(e) {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return React.createElement(\"div\", {\n        className: \"row__wrapper form__wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Deja tu comentario\"), React.createElement(\"form\", {\n        id: \"commentForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"userName\",\n        type: \"hidden\",\n        value: this.state.userName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        name: \"userComment\",\n        value: this.state.userComment,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"articleId\",\n        type: \"hidden\",\n        value: this.props.articleID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Login, {\n        action: this.changeLoginState.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, window));\n    }\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/josemejiao/Documents/topicos_telematica/project01/frontend/periodico/src/CommentForm.js"],"names":["React","Component","Login","CommentForm","constructor","props","state","userName","userComment","isLoggedIn","handleChange","bind","handleSubmit","changeLoginState","e","target","inputName","name","inputValue","value","setState","preventDefault","params","User","body","article","articleID","fetch","method","headers","JSON","stringify","then","res","json","data","console","log","document","getElementById","reset","action","catch","render","window"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from './Login.js';\n\nclass CommentForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userName: 'Jose A. Mejia',\n            userComment: '',\n            isLoggedIn: false\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changeLoginState = this.changeLoginState.bind(this);\n    }\n    handleChange(e) {\n        const target = e.target;\n        const inputName = target.name;\n        const inputValue = target.value;\n        this.setState({\n            [inputName]: inputValue\n        });\n    }\n    handleSubmit(e) {\n        \n        e.preventDefault();\n        \n        var params = {\n            User: this.state.userName,\n            body: this.state.userComment,\n            article: this.props.articleID\n        };\n\n        fetch('http://localhost:3000/comments/'+this.props.articleID+'', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(params)\n        }).then(res => res.json())\n        .then((data) => {\n            console.log(data);\n            this.setState({userName: '', userComment: ''});\n            document.getElementById(\"commentForm\").reset();\n            this.props.action(params);\n        })\n        .catch(console.log)\n        \n    }\n    changeLoginState(e){\n        this.setState({isLoggedIn:true});\n    }\n    render() {\n        if (this.state.isLoggedIn) {\n            return (\n                <div className=\"row__wrapper form__wrapper\">\n                    <p className=\"form__title\">Deja tu comentario</p>\n                    <form id=\"commentForm\" onSubmit={this.handleSubmit}>\n                        <input name=\"userName\" type=\"hidden\" value={ this.state.userName } />\n                        <textarea name=\"userComment\" value={this.state.userComment} onChange={this.handleChange}></textarea>\n                        <input name=\"articleId\" type=\"hidden\" value={ this.props.articleID } />\n                        <input type=\"submit\" value=\"submit\" />\n                    </form>\n                </div>\n            );\n        } else {\n            return(\n                <div>\n                <Login action={this.changeLoginState.bind(this)} />\n                <pre>{window}</pre>\n                </div>\n            );\n        }\n    }\n}\n\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}